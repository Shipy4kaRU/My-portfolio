{"version":3,"sources":["surfacingSections.js"],"names":["allParts","Array","from","document","querySelectorAll","getSurfacing","splice","entry","entries","isIntersecting","target","classList","remove","observer","unobserve","surfacingObserver","IntersectionObserver","threshold","observe","add","part","surfacingSections"],"mappings":"AACA,IAAMA,SAAWC,MAAMC,KAAKC,SAASC,iBAAiB,SAAW,CAAA,EAG3DC,cAFNL,SAASM,OAAO,EAAG,CAAC,EAEC,SAAfD,EAAYA,GACVE,EAAQC,EAAU,GACnBD,EAAME,iBACXF,EAAMG,OAAOC,UAAUC,OAAO,cAAc,EAC5CC,EAASC,UAAUP,EAAMG,MAAM,EACjC,GAGMK,kBAAM,IAAAC,qBAAAX,aAAA,CACVY,KAAAA,KACAA,UAAA,GAEF,CAAA,EAEIF,kBAAkBG,WADpBlB,SAEOW,QAAUQ,SAAIC,GACnBL,kBAAAG,QAAAE,CAAA,EACHA,EAAAT,UAAAQ,IAAA,cAAA,CAED,CAAA,CAFA,iBAEeE","file":"surfacingSections.js","sourcesContent":["// SURFACING SECTIONS\nconst allParts = Array.from(document.querySelectorAll(\"section\"));\nallParts.splice(0, 2); //удаляю первые 2 секции для того, чтобы observer их не учитывал\n\nconst getSurfacing = function (entries, observer) {\n  const entry = entries[0];\n  if (!entry.isIntersecting) return;\n  entry.target.classList.remove(\"part--hidden\");\n  observer.unobserve(entry.target);\n};\n\nconst surfacingObserver = new IntersectionObserver(getSurfacing, {\n  root: null,\n  threshold: 0.02,\n});\n\nconst surfacingSections = () => {\n  allParts.forEach(function (part) {\n    surfacingObserver.observe(part);\n    part.classList.add(\"part--hidden\");\n  });\n};\n\nexport default surfacingSections;\n"]}